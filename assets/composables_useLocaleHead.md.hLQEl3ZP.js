import{_ as a,c as e,o as i,ag as t}from"./chunks/framework.CbO9FoPk.js";const k=JSON.parse('{"title":"üåç useLocaleHead Composable","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"composables/useLocaleHead.md","filePath":"composables/useLocaleHead.md","lastUpdated":1724679268000}'),n={name:"composables/useLocaleHead.md"};function l(o,s,d,h,r,p){return i(),e("div",null,[...s[0]||(s[0]=[t(`<h1 id="üåç-uselocalehead-composable" tabindex="-1">üåç <code>useLocaleHead</code> Composable <a class="header-anchor" href="#üåç-uselocalehead-composable" aria-label="Permalink to &quot;üåç \`useLocaleHead\` Composable&quot;">‚Äã</a></h1><p>The <code>useLocaleHead</code> composable is a utility in <code>Nuxt I18n Micro</code> that helps you manage SEO attributes and HTML meta tags for localized routes. It dynamically generates attributes for the <code>lang</code> and <code>dir</code> of the HTML document and creates <code>meta</code> and <code>link</code> tags to improve the SEO of your localized content.</p><h2 id="‚öôÔ∏è-options" tabindex="-1">‚öôÔ∏è Options <a class="header-anchor" href="#‚öôÔ∏è-options" aria-label="Permalink to &quot;‚öôÔ∏è Options&quot;">‚Äã</a></h2><p>The <code>useLocaleHead</code> composable accepts an options object to customize its behavior:</p><h3 id="adddirattribute" tabindex="-1"><code>addDirAttribute</code> <a class="header-anchor" href="#adddirattribute" aria-label="Permalink to &quot;\`addDirAttribute\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>true</code></li><li><strong>Description</strong>: If <code>true</code>, adds the <code>dir</code> attribute to the HTML document based on the current locale&#39;s direction (<code>ltr</code> or <code>rtl</code>).</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ addDirAttribute: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div></li></ul><h3 id="identifierattribute" tabindex="-1"><code>identifierAttribute</code> <a class="header-anchor" href="#identifierattribute" aria-label="Permalink to &quot;\`identifierAttribute\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Default</strong>: <code>&#39;id&#39;</code></li><li><strong>Description</strong>: Specifies the attribute used to identify the generated meta and link tags. This is useful for differentiating tags when inspecting the document head.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ identifierAttribute: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-i18n&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div></li></ul><h3 id="addseoattributes" tabindex="-1"><code>addSeoAttributes</code> <a class="header-anchor" href="#addseoattributes" aria-label="Permalink to &quot;\`addSeoAttributes\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>true</code></li><li><strong>Description</strong>: If <code>true</code>, includes SEO-related meta and link tags, such as <code>og:locale</code>, <code>og:url</code>, and <code>hreflang</code> attributes for alternate languages.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ addSeoAttributes: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div></li></ul><h3 id="baseurl" tabindex="-1"><code>baseUrl</code> <a class="header-anchor" href="#baseurl" aria-label="Permalink to &quot;\`baseUrl\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Default</strong>: <code>&#39;/&#39;</code></li><li><strong>Description</strong>: The base URL of your application, used to generate canonical and alternate URLs for SEO purposes.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div></li></ul><h2 id="üõ†Ô∏è-return-values" tabindex="-1">üõ†Ô∏è Return Values <a class="header-anchor" href="#üõ†Ô∏è-return-values" aria-label="Permalink to &quot;üõ†Ô∏è Return Values&quot;">‚Äã</a></h2><p>The <code>useLocaleHead</code> composable returns an object with <code>htmlAttrs</code>, <code>meta</code>, and <code>link</code> properties, which can be directly used in the <code>&lt;head&gt;</code> section of your Nuxt application.</p><h3 id="htmlattrs" tabindex="-1"><code>htmlAttrs</code> <a class="header-anchor" href="#htmlattrs" aria-label="Permalink to &quot;\`htmlAttrs\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>Record&lt;string, string&gt;</code></li><li><strong>Description</strong>: Contains attributes to be added to the <code>&lt;html&gt;</code> tag, such as <code>lang</code> and <code>dir</code>.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">htmlAttrs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(htmlAttrs)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output: { lang: &#39;en-US&#39;, dir: &#39;ltr&#39; }</span></span></code></pre></div></li></ul><h3 id="meta" tabindex="-1"><code>meta</code> <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;\`meta\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>Array&lt;Record&lt;string, string&gt;&gt;</code></li><li><strong>Description</strong>: Contains meta tags for SEO, including Open Graph locale tags and alternate locales.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(meta)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output: [{ id: &#39;i18n-og&#39;, property: &#39;og:locale&#39;, content: &#39;en-US&#39; }, ...]</span></span></code></pre></div></li></ul><h3 id="link" tabindex="-1"><code>link</code> <a class="header-anchor" href="#link" aria-label="Permalink to &quot;\`link\`&quot;">‚Äã</a></h3><ul><li><strong>Type</strong>: <code>Array&lt;Record&lt;string, string&gt;&gt;</code></li><li><strong>Description</strong>: Contains link tags for canonical URLs and alternate language versions of the page.</li><li><strong>Example</strong>:<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output: [{ id: &#39;i18n-can&#39;, rel: &#39;canonical&#39;, href: &#39;https://example.com/about&#39; }, ...]</span></span></code></pre></div></li></ul><h2 id="üõ†Ô∏è-example-usages" tabindex="-1">üõ†Ô∏è Example Usages <a class="header-anchor" href="#üõ†Ô∏è-example-usages" aria-label="Permalink to &quot;üõ†Ô∏è Example Usages&quot;">‚Äã</a></h2><h3 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">‚Äã</a></h3><p>Generate locale-specific head attributes with default options.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="customize-identifier-attribute" tabindex="-1">Customize Identifier Attribute <a class="header-anchor" href="#customize-identifier-attribute" aria-label="Permalink to &quot;Customize Identifier Attribute&quot;">‚Äã</a></h3><p>Use a custom identifier attribute for the generated tags.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ identifierAttribute: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-i18n&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h3 id="disable-seo-attributes" tabindex="-1">Disable SEO Attributes <a class="header-anchor" href="#disable-seo-attributes" aria-label="Permalink to &quot;Disable SEO Attributes&quot;">‚Äã</a></h3><p>Generate head attributes without adding SEO-related meta and link tags.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ addSeoAttributes: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h3 id="specify-a-base-url" tabindex="-1">Specify a Base URL <a class="header-anchor" href="#specify-a-base-url" aria-label="Permalink to &quot;Specify a Base URL&quot;">‚Äã</a></h3><p>Set a custom base URL for canonical and alternate URLs.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://mywebsite.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h2 id="üöÄ-additional-features" tabindex="-1">üöÄ Additional Features <a class="header-anchor" href="#üöÄ-additional-features" aria-label="Permalink to &quot;üöÄ Additional Features&quot;">‚Äã</a></h2><h3 id="seo-meta-and-link-tags" tabindex="-1">SEO Meta and Link Tags <a class="header-anchor" href="#seo-meta-and-link-tags" aria-label="Permalink to &quot;SEO Meta and Link Tags&quot;">‚Äã</a></h3><p>When <code>addSeoAttributes</code> is enabled, the composable automatically generates the following tags:</p><ul><li><code>og:locale</code> for the current locale.</li><li><code>og:url</code> for the canonical URL of the page.</li><li><code>og:locale:alternate</code> for alternate language versions.</li><li><code>rel=&quot;canonical&quot;</code> and <code>rel=&quot;alternate&quot;</code> links for SEO optimization.</li></ul><h3 id="dynamic-locale-and-direction" tabindex="-1">Dynamic Locale and Direction <a class="header-anchor" href="#dynamic-locale-and-direction" aria-label="Permalink to &quot;Dynamic Locale and Direction&quot;">‚Äã</a></h3><p>The composable dynamically determines the <code>lang</code> and <code>dir</code> attributes based on the current route&#39;s locale, ensuring that your HTML document is correctly configured for international users.</p><h3 id="handling-localized-routes" tabindex="-1">Handling Localized Routes <a class="header-anchor" href="#handling-localized-routes" aria-label="Permalink to &quot;Handling Localized Routes&quot;">‚Äã</a></h3><p>If your routes are prefixed with locale codes (e.g., <code>/en/about</code>), the composable intelligently adjusts the full path for generating URLs, ensuring that SEO attributes are accurate and relevant.</p><p>This composable simplifies the process of optimizing your Nuxt application for international audiences, ensuring that your site is well-prepared for global search engines and users.</p><h2 id="üõ†Ô∏è-example-usage" tabindex="-1">üõ†Ô∏è Example Usage <a class="header-anchor" href="#üõ†Ô∏è-example-usage" aria-label="Permalink to &quot;üõ†Ô∏è Example Usage&quot;">‚Äã</a></h2><p>The following example demonstrates how to use the <code>useLocaleHead</code> composable within a Vue component with default settings:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocaleHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addDirAttribute: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  identifierAttribute: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addSeoAttributes: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(head)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="explanation-of-the-code" tabindex="-1">Explanation of the Code <a class="header-anchor" href="#explanation-of-the-code" aria-label="Permalink to &quot;Explanation of the Code&quot;">‚Äã</a></h3><ul><li><p><strong><code>useLocaleHead</code> Composable</strong>: This composable is called in the <code>&lt;script setup&gt;</code> section and returns an object containing <code>htmlAttrs</code>, <code>meta</code>, and <code>link</code>.</p></li><li><p><strong><code>&lt;html&gt;</code> Tag</strong>: The <code>lang</code> and <code>dir</code> attributes for the HTML document are dynamically determined based on the current locale and are applied to the <code>&lt;html&gt;</code> tag.</p></li><li><p><strong><code>&lt;head&gt;</code> Section</strong>:</p><ul><li><strong>Meta Tags</strong>: SEO-related meta tags are generated, including <code>og:locale</code>, <code>og:url</code>, and <code>rel=&quot;canonical&quot;</code> and <code>rel=&quot;alternate&quot;</code> tags to specify alternate language versions of the page.</li><li><strong>Link Tags</strong>: Canonical links and links to alternate language versions are included.</li></ul></li><li><p><strong><code>&lt;body&gt;</code> Section</strong>: The main content of the page is displayed here. In this example, a simple header and paragraph are used.</p></li></ul><h3 id="üìù-notes" tabindex="-1">üìù Notes <a class="header-anchor" href="#üìù-notes" aria-label="Permalink to &quot;üìù Notes&quot;">‚Äã</a></h3><ol><li><p><strong>Attributes</strong>: The attributes used (<code>lang</code>, <code>dir</code>, <code>rel</code>, <code>href</code>, <code>hreflang</code>, <code>property</code>, <code>content</code>) are extracted from the object returned by <code>useLocaleHead</code>.</p></li><li><p><strong>SEO Tags Generation</strong>: If the <code>addSeoAttributes</code> option is set to <code>true</code>, the composable automatically generates SEO tags for the current locale.</p></li><li><p><strong>Base URL</strong>: You can set your custom base URL using the <code>baseUrl</code> option to correctly generate canonical and alternate links.</p></li></ol><p>This example demonstrates how easy it is to integrate <code>useLocaleHead</code> into your application&#39;s components to ensure correct SEO attributes and improve the search engine indexing of localized pages.</p>`,50)])])}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
