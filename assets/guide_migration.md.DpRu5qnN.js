import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.CbO9FoPk.js";const c=JSON.parse('{"title":"🔄 Migration from nuxt-i18n to Nuxt I18n Micro","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/migration.md","filePath":"guide/migration.md","lastUpdated":1724265480000}'),e={name:"guide/migration.md"};function l(o,s,h,p,r,d){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="🔄-migration-from-nuxt-i18n-to-nuxt-i18n-micro" tabindex="-1">🔄 Migration from <code>nuxt-i18n</code> to <code>Nuxt I18n Micro</code> <a class="header-anchor" href="#🔄-migration-from-nuxt-i18n-to-nuxt-i18n-micro" aria-label="Permalink to &quot;🔄 Migration from \`nuxt-i18n\` to \`Nuxt I18n Micro\`&quot;">​</a></h1><h2 id="📖-introduction" tabindex="-1">📖 Introduction <a class="header-anchor" href="#📖-introduction" aria-label="Permalink to &quot;📖 Introduction&quot;">​</a></h2><p>Migrating from <code>nuxt-i18n</code> to <code>Nuxt I18n Micro</code> can significantly improve the performance of your Nuxt application, especially in high-traffic environments or projects with large translation files. This guide provides a step-by-step approach to help you smoothly transition from <code>nuxt-i18n</code> to <code>Nuxt I18n Micro</code>.</p><h2 id="🚀-why-migrate" tabindex="-1">🚀 Why Migrate? <a class="header-anchor" href="#🚀-why-migrate" aria-label="Permalink to &quot;🚀 Why Migrate?&quot;">​</a></h2><p>The <code>Nuxt I18n Micro</code> module offers several advantages over the traditional <code>nuxt-i18n</code>:</p><ul><li><strong>⚡ Improved Performance</strong>: Faster build times, lower memory usage, and smaller bundle sizes.</li><li><strong>🔧 Simplified Configuration</strong>: A more streamlined setup process with fewer moving parts.</li><li><strong>📉 Better Resource Management</strong>: Optimized handling of large translation files and reduced server load.</li></ul><h2 id="🔍-key-differences" tabindex="-1">🔍 Key Differences <a class="header-anchor" href="#🔍-key-differences" aria-label="Permalink to &quot;🔍 Key Differences&quot;">​</a></h2><p>Before you begin the migration process, it’s essential to understand the key differences between <code>nuxt-i18n</code> and <code>Nuxt I18n Micro</code>:</p><ul><li><strong>🌐 Route Management</strong>: <code>Nuxt I18n Micro</code> uses dynamic regex-based routing, generating only two routes regardless of the number of locales, unlike <code>nuxt-i18n</code> which creates a separate route for each locale.</li><li><strong>🗂️ Translation Files</strong>: Only JSON files are supported in <code>Nuxt I18n Micro</code>. The translations are split into global and page-specific files, which are auto-generated in development mode if not present.</li><li><strong>📈 SEO Integration</strong>: <code>Nuxt I18n Micro</code> offers built-in SEO optimization with automatic meta tag generation and support for <code>hreflang</code> tags.</li></ul><h2 id="🛠️-step-by-step-migration" tabindex="-1">🛠️ Step-by-Step Migration <a class="header-anchor" href="#🛠️-step-by-step-migration" aria-label="Permalink to &quot;🛠️ Step-by-Step Migration&quot;">​</a></h2><h3 id="_1-🛠️-install-nuxt-i18n-micro" tabindex="-1">1. 🛠️ Install <code>Nuxt I18n Micro</code> <a class="header-anchor" href="#_1-🛠️-install-nuxt-i18n-micro" aria-label="Permalink to &quot;1. 🛠️ Install \`Nuxt I18n Micro\`&quot;">​</a></h3><p>First, add <code>Nuxt I18n Micro</code> to your Nuxt project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nuxt-i18n-micro</span></span></code></pre></div><h3 id="_2-🔄-update-configuration" tabindex="-1">2. 🔄 Update Configuration <a class="header-anchor" href="#_2-🔄-update-configuration" aria-label="Permalink to &quot;2. 🔄 Update Configuration&quot;">​</a></h3><p>Replace your existing <code>nuxt-i18n</code> configuration in <code>nuxt.config.ts</code> with the <code>Nuxt I18n Micro</code> configuration. Here’s an example:</p><p><strong>Before (nuxt-i18n):</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNuxtConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modules: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nuxt-i18n&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  i18n: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    locales: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr-FR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultLocale: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vueI18n: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./i18n.config.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><strong>After (Nuxt I18n Micro):</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNuxtConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modules: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nuxt-i18n-micro&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  i18n: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    locales: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ltr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr-FR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ltr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultLocale: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    translationDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;locales&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    meta: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-🗂️-reorganize-translation-files" tabindex="-1">3. 🗂️ Reorganize Translation Files <a class="header-anchor" href="#_3-🗂️-reorganize-translation-files" aria-label="Permalink to &quot;3. 🗂️ Reorganize Translation Files&quot;">​</a></h3><p>Move your translation files to the <code>locales</code> directory. Ensure they are in JSON format and organized by locale. For example:</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  /locales</span></span>
<span class="line"><span>  ├── /pages</span></span>
<span class="line"><span>  │   ├── /index</span></span>
<span class="line"><span>  │   │   ├── en.json</span></span>
<span class="line"><span>  │   │   ├── fr.json</span></span>
<span class="line"><span>  │   │   └── ar.json</span></span>
<span class="line"><span>  │   ├── /about</span></span>
<span class="line"><span>  │   │   ├── en.json</span></span>
<span class="line"><span>  │   │   ├── fr.json</span></span>
<span class="line"><span>  │   │   └── ar.json</span></span>
<span class="line"><span>  ├── en.json</span></span>
<span class="line"><span>  ├── fr.json</span></span>
<span class="line"><span>  └── ar.json</span></span></code></pre></div><h3 id="_4-🔗-replace-nuxt-link-with-nuxtlink" tabindex="-1">4. 🔗 Replace <code>&lt;nuxt-link&gt;</code> with <code>&lt;NuxtLink&gt;</code> <a class="header-anchor" href="#_4-🔗-replace-nuxt-link-with-nuxtlink" aria-label="Permalink to &quot;4. 🔗 Replace \`&lt;nuxt-link&gt;\` with \`&lt;NuxtLink&gt;\`&quot;">​</a></h3><p>If you are using <code>&lt;nuxt-link&gt;</code> for navigation, replace it with <code>&lt;NuxtLink&gt;</code> to ensure compatibility with the new module.</p><p><strong>Before:</strong></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nuxt-link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Home&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nuxt-link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>After:</strong></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">NuxtLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$localeRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Home&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">NuxtLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- or --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i18n-link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Home&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i18n-link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="_5-🛠️-handle-seo-configurations" tabindex="-1">5. 🛠️ Handle SEO Configurations <a class="header-anchor" href="#_5-🛠️-handle-seo-configurations" aria-label="Permalink to &quot;5. 🛠️ Handle SEO Configurations&quot;">​</a></h3><p>Ensure that your SEO configurations are updated to take advantage of <code>Nuxt I18n Micro</code>’s automatic meta tag generation. Remove any redundant SEO configurations that were specific to <code>nuxt-i18n</code>.</p><h3 id="_6-🧪-test-your-application" tabindex="-1">6. 🧪 Test Your Application <a class="header-anchor" href="#_6-🧪-test-your-application" aria-label="Permalink to &quot;6. 🧪 Test Your Application&quot;">​</a></h3><p>After completing the migration steps, thoroughly test your application to ensure that all translations are loading correctly and that navigation between locales works as expected. Pay special attention to SEO-related tags and ensure that they are generated as intended.</p><h2 id="🛡️-common-issues-and-troubleshooting" tabindex="-1">🛡️ Common Issues and Troubleshooting <a class="header-anchor" href="#🛡️-common-issues-and-troubleshooting" aria-label="Permalink to &quot;🛡️ Common Issues and Troubleshooting&quot;">​</a></h2><h3 id="❌-translation-files-not-loading" tabindex="-1">❌ Translation Files Not Loading <a class="header-anchor" href="#❌-translation-files-not-loading" aria-label="Permalink to &quot;❌ Translation Files Not Loading&quot;">​</a></h3><p>Ensure that your translation files are in the correct directory and follow the JSON format. Also, confirm that the <code>translationDir</code> option in your configuration matches the location of your translation files.</p><h3 id="⚠️-route-not-found-errors" tabindex="-1">⚠️ Route Not Found Errors <a class="header-anchor" href="#⚠️-route-not-found-errors" aria-label="Permalink to &quot;⚠️ Route Not Found Errors&quot;">​</a></h3><p>Check that the routes are correctly set up in your application and that the <code>locales</code> array in the configuration includes all necessary locale codes.</p><h3 id="🏷️-missing-seo-tags" tabindex="-1">🏷️ Missing SEO Tags <a class="header-anchor" href="#🏷️-missing-seo-tags" aria-label="Permalink to &quot;🏷️ Missing SEO Tags&quot;">​</a></h3><p>If SEO tags are not being generated, verify that the <code>meta</code> option is enabled in your configuration and that each locale has a valid <code>iso</code> code.</p>`,39)])])}const E=i(e,[["render",l]]);export{c as __pageData,E as default};
