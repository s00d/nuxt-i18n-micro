import{_ as i,c as n,o as e,ag as a}from"./chunks/framework.CbO9FoPk.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Nuxt I18n Micro","text":"Fast, Simple, and Lightweight Internationalization for Nuxt","tagline":"Optimize your Nuxt app with a powerful and efficient i18n solution.","actions":[{"theme":"brand","text":"🚀 Get Started","link":"/guide/getting-started"},{"theme":"alt","text":"⭐ View on GitHub","link":"https://github.com/s00d/nuxt-i18n-micro"}]},"features":[{"title":"⚡ High Performance","details":"🚀 Significant reductions in build times, memory usage, and server load, making it ideal for large-scale projects."},{"title":"🪶 Compact and Lightweight","details":"🧩 Designed for efficiency, reducing the total bundle size by up to 96% compared to traditional i18n modules."},{"title":"🎨 Minimalist Design","details":"🧱 A simple structure with just 5 components, easy to extend and maintain."},{"title":"🔄 Dynamic Routing","details":"🗺️ Efficient regex-based routing that generates only two routes regardless of the number of locales."},{"title":"📂 Streamlined Translation Loading","details":"🔧 Supports only JSON files, with auto-generated page-specific translations."},{"title":"🌐 Seamless Nuxt Integration","details":"🛠️ Seamless integration with Nuxt.js, making it easy to add powerful i18n features to your application."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1724249388000}'),t={name:"index.md"};function r(l,s,o,p,d,h){return e(),n("div",null,[...s[0]||(s[0]=[a(`<hr><h2 id="✨-introduction" tabindex="-1">✨ Introduction <a class="header-anchor" href="#✨-introduction" aria-label="Permalink to &quot;✨ Introduction&quot;">​</a></h2><p><code>Nuxt I18n Micro</code> is a fast, simple, and lightweight internationalization (i18n) module for Nuxt. Despite its compact size, it&#39;s designed with <strong>large projects</strong> in mind, offering significant performance improvements over traditional i18n solutions like <code>nuxt-i18n</code>. The module was built from the ground up to be highly efficient, focusing on minimizing build times, reducing server load, and shrinking bundle sizes.</p><h2 id="📝-why-nuxt-i18n-micro" tabindex="-1">📝 Why Nuxt I18n Micro? <a class="header-anchor" href="#📝-why-nuxt-i18n-micro" aria-label="Permalink to &quot;📝 Why Nuxt I18n Micro?&quot;">​</a></h2><p>The <code>Nuxt I18n Micro</code> module was created to address critical performance issues found in the original <code>nuxt-i18n</code> module, particularly in <strong>high-traffic environments</strong> and projects with <strong>large translation files</strong>. Key issues with <code>nuxt-i18n</code> include:</p><ul><li>🚨 <strong>High Memory Consumption</strong>: Consumes significant memory during both build and runtime, leading to performance bottlenecks.</li><li>🐢 <strong>Slow Performance</strong>: Especially with large translation files, it causes noticeable slowdowns in build times and server response.</li><li>💼 <strong>Large Bundle Size</strong>: Generates a large bundle, negatively impacting application performance.</li><li>🐛 <strong>Memory Leaks and Bugs</strong>: Known for memory leaks and unpredictable behavior under heavy load.</li></ul><h3 id="🏁-performance-comparison" tabindex="-1">🏁 Performance Comparison <a class="header-anchor" href="#🏁-performance-comparison" aria-label="Permalink to &quot;🏁 Performance Comparison&quot;">​</a></h3><p>To showcase the efficiency of <code>Nuxt I18n Micro</code>, we conducted tests under identical conditions. Both modules were tested with a <strong>10MB translation file</strong> on the same hardware.</p><h4 id="⏱️-build-time-and-resource-consumption" tabindex="-1">⏱️ Build Time and Resource Consumption <a class="header-anchor" href="#⏱️-build-time-and-resource-consumption" aria-label="Permalink to &quot;⏱️ Build Time and Resource Consumption&quot;">​</a></h4><details class="details custom-block"><summary><strong>Nuxt I18n</strong></summary><ul><li><strong>Total Size</strong>: 54.7 MB (3.31 MB gzip)</li><li><strong>Max CPU Usage</strong>: 391.4%</li><li><strong>Max Memory Usage</strong>: 8305 MB</li><li><strong>Elapsed Time</strong>: 0h 1m 31s</li></ul></details><div class="tip custom-block"><p class="custom-block-title"><strong>Nuxt I18n Micro</strong></p><ul><li><strong>Total Size</strong>: 1.93 MB (473 kB gzip) — <strong>96% smaller</strong></li><li><strong>Max CPU Usage</strong>: 220.1% — <strong>44% lower</strong></li><li><strong>Max Memory Usage</strong>: 655 MB — <strong>92% less memory</strong></li><li><strong>Elapsed Time</strong>: 0h 0m 5s — <strong>94% faster</strong></li></ul></div><h4 id="🌐-server-performance-10k-requests" tabindex="-1">🌐 Server Performance (10k Requests) <a class="header-anchor" href="#🌐-server-performance-10k-requests" aria-label="Permalink to &quot;🌐 Server Performance (10k Requests)&quot;">​</a></h4><details class="details custom-block"><summary><strong>Nuxt I18n</strong></summary><ul><li><strong>Requests per Second</strong>: 49.05 [#/sec] (mean)</li><li><strong>Time per Request</strong>: 611.599 ms (mean)</li><li><strong>Max Memory Usage</strong>: 703.73 MB</li></ul></details><div class="tip custom-block"><p class="custom-block-title"><strong>Nuxt I18n Micro</strong></p><ul><li><strong>Requests per Second</strong>: 61.18 [#/sec] (mean) — <strong>25% more requests per second</strong></li><li><strong>Time per Request</strong>: 490.379 ms (mean) — <strong>20% faster</strong></li><li><strong>Max Memory Usage</strong>: 323.00 MB — <strong>54% less memory usage</strong></li></ul></div><p>These results clearly demonstrate that <code>Nuxt I18n Micro</code> significantly outperforms the original module in every critical area.</p><h2 id="🔑-key-features" tabindex="-1">🔑 Key Features <a class="header-anchor" href="#🔑-key-features" aria-label="Permalink to &quot;🔑 Key Features&quot;">​</a></h2><ul><li>🌐 <strong>Compact Yet Powerful</strong>: Despite its small size, <code>Nuxt I18n Micro</code> is designed for <strong>large-scale projects</strong>, focusing on performance and efficiency.</li><li>⚡ <strong>Optimized Build and Runtime</strong>: Reduces build times, memory usage, and server load, making it ideal for <strong>high-traffic applications</strong>.</li><li>🛠️ <strong>Minimalist Design</strong>: The module is structured around just <strong>5 components</strong> (1 module and 4 plugins), making it easy to understand, extend, and maintain.</li><li>📏 <strong>Efficient Routing</strong>: Generates only <strong>2 routes</strong> regardless of the number of locales, thanks to dynamic regex-based routing, unlike other i18n modules that generate separate routes for each locale.</li><li>🗂 <strong>Streamlined Translation Loading</strong>: Only <strong>JSON files</strong> are supported, with translations split between a global file for common texts (e.g., menus) and page-specific files, which are auto-generated in the <code>dev</code> mode if not present.</li></ul><h2 id="⚙️-quick-setup" tabindex="-1">⚙️ Quick Setup <a class="header-anchor" href="#⚙️-quick-setup" aria-label="Permalink to &quot;⚙️ Quick Setup&quot;">​</a></h2><p>Install the module in your Nuxt application with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nuxt-i18n-micro</span></span></code></pre></div><p>Then, add it to your <code>nuxt.config.ts</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNuxtConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modules: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;nuxt-i18n-micro&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  i18n: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    locales: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ltr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr-FR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ltr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, iso: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ar-SA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rtl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultLocale: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    translationDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;locales&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    meta: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>That&#39;s it! You&#39;re now ready to use <strong>Nuxt I18n Micro</strong> in your Nuxt app.</p><h2 id="🗂-folder-structure" tabindex="-1">🗂 Folder Structure <a class="header-anchor" href="#🗂-folder-structure" aria-label="Permalink to &quot;🗂 Folder Structure&quot;">​</a></h2><p>Translations are organized into <strong>global</strong> and <strong>page-specific</strong> files:</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  /locales</span></span>
<span class="line"><span>  ├── /pages</span></span>
<span class="line"><span>  │   ├── /index</span></span>
<span class="line"><span>  │   │   ├── en.json</span></span>
<span class="line"><span>  │   │   ├── fr.json</span></span>
<span class="line"><span>  │   │   └── ar.json</span></span>
<span class="line"><span>  │   ├── /about</span></span>
<span class="line"><span>  │   │   ├── en.json</span></span>
<span class="line"><span>  │   │   ├── fr.json</span></span>
<span class="line"><span>  │   │   └── ar.json</span></span>
<span class="line"><span>  ├── en.json</span></span>
<span class="line"><span>  ├── fr.json</span></span>
<span class="line"><span>  └── ar.json</span></span></code></pre></div>`,26)])])}const u=i(t,[["render",r]]);export{g as __pageData,u as default};
