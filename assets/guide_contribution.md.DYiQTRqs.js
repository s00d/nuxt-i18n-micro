import{_ as i,c as a,o as s,ag as t}from"./chunks/framework.CbO9FoPk.js";const u=JSON.parse('{"title":"🤝 Contribution Guide","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/contribution.md","filePath":"guide/contribution.md","lastUpdated":1737055913000}'),n={name:"guide/contribution.md"};function o(l,e,r,h,p,d){return s(),a("div",null,[...e[0]||(e[0]=[t(`<h1 id="🤝-contribution-guide" tabindex="-1">🤝 Contribution Guide <a class="header-anchor" href="#🤝-contribution-guide" aria-label="Permalink to &quot;🤝 Contribution Guide&quot;">​</a></h1><h2 id="📖-introduction" tabindex="-1">📖 Introduction <a class="header-anchor" href="#📖-introduction" aria-label="Permalink to &quot;📖 Introduction&quot;">​</a></h2><p>Thank you for your interest in contributing to <code>Nuxt I18n Micro</code>! We welcome contributions from the community, whether it&#39;s bug fixes, new features, or improvements to the documentation. This guide outlines the steps to help you get started and ensures that your contributions can be easily integrated into the project.</p><h2 id="🚀-getting-started" tabindex="-1">🚀 Getting Started <a class="header-anchor" href="#🚀-getting-started" aria-label="Permalink to &quot;🚀 Getting Started&quot;">​</a></h2><h3 id="_1-📚-familiarize-yourself-with-the-project" tabindex="-1">1. 📚 Familiarize Yourself with the Project <a class="header-anchor" href="#_1-📚-familiarize-yourself-with-the-project" aria-label="Permalink to &quot;1. 📚 Familiarize Yourself with the Project&quot;">​</a></h3><p>Before making changes, it&#39;s a good idea to familiarize yourself with the project&#39;s architecture and codebase. Read through the existing documentation and take a look at open issues and pull requests to understand ongoing work and challenges.</p><h3 id="_2-🍴-fork-the-repository" tabindex="-1">2. 🍴 Fork the Repository <a class="header-anchor" href="#_2-🍴-fork-the-repository" aria-label="Permalink to &quot;2. 🍴 Fork the Repository&quot;">​</a></h3><ul><li>Navigate to the <a href="https://github.com/s00d/nuxt-i18n-micro" target="_blank" rel="noreferrer">Nuxt I18n Micro repository</a>.</li><li>Click the &quot;Fork&quot; button in the upper right corner to create a copy of the repository in your GitHub account.</li></ul><h3 id="_3-📥-clone-your-fork" tabindex="-1">3. 📥 Clone Your Fork <a class="header-anchor" href="#_3-📥-clone-your-fork" aria-label="Permalink to &quot;3. 📥 Clone Your Fork&quot;">​</a></h3><p>Clone the forked repository to your local machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your-usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nuxt-i18n-micro.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nuxt-i18n-micro</span></span></code></pre></div><p>Replace <code>&lt;your-username&gt;</code> with your GitHub username.</p><h3 id="_4-🌱-create-a-branch" tabindex="-1">4. 🌱 Create a Branch <a class="header-anchor" href="#_4-🌱-create-a-branch" aria-label="Permalink to &quot;4. 🌱 Create a Branch&quot;">​</a></h3><p>Create a new branch for your work:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-feature-name</span></span></code></pre></div><p>Use descriptive branch names, such as <code>bugfix/fix-translation-error</code> or <code>feature/add-new-locale-support</code>.</p><h1 id="🛠️-local-development-setup" tabindex="-1">🛠️ Local Development Setup <a class="header-anchor" href="#🛠️-local-development-setup" aria-label="Permalink to &quot;🛠️ Local Development Setup&quot;">​</a></h1><h2 id="🛠-prerequisites" tabindex="-1">🛠 Prerequisites <a class="header-anchor" href="#🛠-prerequisites" aria-label="Permalink to &quot;🛠 Prerequisites&quot;">​</a></h2><p>Before you begin, ensure that you have the following installed on your machine:</p><ul><li><strong>Node.js</strong>: v16 or later</li><li><strong>npm</strong>: v7 or later</li><li><strong>pnpm</strong>: v9 or later</li></ul><h2 id="🚀-getting-started-1" tabindex="-1">🚀 Getting Started <a class="header-anchor" href="#🚀-getting-started-1" aria-label="Permalink to &quot;🚀 Getting Started&quot;">​</a></h2><h3 id="_1-📥-clone-the-repository" tabindex="-1">1. 📥 Clone the Repository <a class="header-anchor" href="#_1-📥-clone-the-repository" aria-label="Permalink to &quot;1. 📥 Clone the Repository&quot;">​</a></h3><p>First, you need to clone the <code>nuxt-i18n-micro</code> repository to your local machine.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/s00d/nuxt-i18n-micro.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nuxt-i18n-micro</span></span></code></pre></div><h3 id="_2-📦-install-dependencies" tabindex="-1">2. 📦 Install Dependencies <a class="header-anchor" href="#_2-📦-install-dependencies" aria-label="Permalink to &quot;2. 📦 Install Dependencies&quot;">​</a></h3><p>Next, install the project dependencies using pnpm.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./packages/**&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prepack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playground</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span></code></pre></div><h3 id="_3-🖥️-run-the-development-server" tabindex="-1">3. 🖥️ Run the Development Server <a class="header-anchor" href="#_3-🖥️-run-the-development-server" aria-label="Permalink to &quot;3. 🖥️ Run the Development Server&quot;">​</a></h3><p>To start the development server and work on the module, run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>This command will start the Nuxt development server using the <code>playground</code> directory as the testing environment. You can view the app in your browser by navigating to <code>http://localhost:3000</code>.</p><h3 id="_4-🏗️-building-the-module" tabindex="-1">4. 🏗️ Building the Module <a class="header-anchor" href="#_4-🏗️-building-the-module" aria-label="Permalink to &quot;4. 🏗️ Building the Module&quot;">​</a></h3><p>To build the module, use the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prepack</span></span></code></pre></div><p>This command prepares the module by building the necessary files, stubbing certain components, and ensuring everything is ready for packaging.</p><h3 id="_5-🧹-linting-the-code" tabindex="-1">5. 🧹 Linting the Code <a class="header-anchor" href="#_5-🧹-linting-the-code" aria-label="Permalink to &quot;5. 🧹 Linting the Code&quot;">​</a></h3><p>To ensure your code adheres to the project&#39;s coding standards, run the linter:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span></code></pre></div><p>If there are any issues, you can attempt to automatically fix them using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint:fix</span></span></code></pre></div><h3 id="_6-✅-running-tests" tabindex="-1">6. ✅ Running Tests <a class="header-anchor" href="#_6-✅-running-tests" aria-label="Permalink to &quot;6. ✅ Running Tests&quot;">​</a></h3><p>To run the test suite, use the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:workspaces</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><p>This will run all the Playwright tests to ensure everything is functioning as expected.</p><h3 id="_7-🔍-type-checking" tabindex="-1">7. 🔍 Type Checking <a class="header-anchor" href="#_7-🔍-type-checking" aria-label="Permalink to &quot;7. 🔍 Type Checking&quot;">​</a></h3><p>For TypeScript type checking, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typecheck</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:types</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><p>This checks the type definitions to ensure there are no type errors.</p><h3 id="_8-📚-building-and-previewing-the-documentation" tabindex="-1">8. 📚 Building and Previewing the Documentation <a class="header-anchor" href="#_8-📚-building-and-previewing-the-documentation" aria-label="Permalink to &quot;8. 📚 Building and Previewing the Documentation&quot;">​</a></h3><p>To build and preview the documentation locally, use the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:serve</span></span></code></pre></div><p>This will build the documentation and serve it locally, allowing you to view it in your browser.</p><h3 id="_9-🎮-running-the-playground" tabindex="-1">9. 🎮 Running the Playground <a class="header-anchor" href="#_9-🎮-running-the-playground" aria-label="Permalink to &quot;9. 🎮 Running the Playground&quot;">​</a></h3><p>If you want to test your changes in a sample Nuxt application, the <code>playground</code> directory serves as a sandbox environment. Run the following command to start the playground:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:build</span></span></code></pre></div><p>You can access the playground app at <code>http://localhost:3000</code>.</p><h2 id="🔧-summary-of-common-scripts" tabindex="-1">🔧 Summary of Common Scripts <a class="header-anchor" href="#🔧-summary-of-common-scripts" aria-label="Permalink to &quot;🔧 Summary of Common Scripts&quot;">​</a></h2><ul><li><strong><code>pnpm run dev</code></strong>: Start the development server using the playground.</li><li><strong><code>pnpm run prepack</code></strong>: Build the module and prepare it for publishing.</li><li><strong><code>pnpm --filter &quot;./packages/**&quot; run build</code></strong>: Build the packages.</li><li><strong><code>pnpm run lint</code></strong>: Run the linter to check for code quality issues.</li><li><strong><code>pnpm run lint:fix</code></strong>: Automatically fix linter issues.</li><li><strong><code>pnpm run test</code></strong>: Run the test suite.</li><li><strong><code>pnpm run test:workspaces</code></strong>: Run the test suite for packages.</li><li><strong><code>pnpm run typecheck</code></strong>: Check TypeScript types.</li><li><strong><code>pnpm run docs:dev</code></strong>: Start the documentation site in development mode.</li><li><strong><code>pnpm run docs:build</code></strong>: Build the documentation site.</li><li><strong><code>pnpm run docs:serve</code></strong>: Serve the built documentation site locally.</li><li><strong><code>pnpm run dev:build</code></strong>: Build the playground environment.</li></ul><h1 id="🚧-making-changes" tabindex="-1">🚧 Making Changes <a class="header-anchor" href="#🚧-making-changes" aria-label="Permalink to &quot;🚧 Making Changes&quot;">​</a></h1><h3 id="_1-💻-code" tabindex="-1">1. 💻 Code <a class="header-anchor" href="#_1-💻-code" aria-label="Permalink to &quot;1. 💻 Code&quot;">​</a></h3><ul><li>Make your changes in the codebase according to the project’s architecture.</li><li>Follow the existing code style and conventions.</li><li>If you’re adding a new feature, consider writing tests for it.</li></ul><h3 id="_2-🧹-run-linting" tabindex="-1">2. 🧹 Run Linting <a class="header-anchor" href="#_2-🧹-run-linting" aria-label="Permalink to &quot;2. 🧹 Run Linting&quot;">​</a></h3><p>Before committing your changes, ensure that your code adheres to the project&#39;s coding standards by running the linter:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span></code></pre></div><p>Fix any linting errors before proceeding.</p><h3 id="_3-🧪-test-your-changes" tabindex="-1">3. 🧪 Test Your Changes <a class="header-anchor" href="#_3-🧪-test-your-changes" aria-label="Permalink to &quot;3. 🧪 Test Your Changes&quot;">​</a></h3><p>Make sure your changes work and do not break any existing functionality:</p><ul><li>Run all tests to ensure there are no errors:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:workspaces</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><ul><li>If you’re fixing a bug, add tests to cover the fix.</li></ul><h3 id="_4-📝-commit-your-changes" tabindex="-1">4. 📝 Commit Your Changes <a class="header-anchor" href="#_4-📝-commit-your-changes" aria-label="Permalink to &quot;4. 📝 Commit Your Changes&quot;">​</a></h3><p>To ensure consistency across the project, we use a standardized commit message format. Please follow this format when making commits:</p><h4 id="✅-commit-message-format" tabindex="-1">✅ Commit Message Format <a class="header-anchor" href="#✅-commit-message-format" aria-label="Permalink to &quot;✅ Commit Message Format&quot;">​</a></h4><p>Each commit message should be structured as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;short description&gt;</span></span></code></pre></div><h4 id="📋-examples" tabindex="-1">📋 Examples: <a class="header-anchor" href="#📋-examples" aria-label="Permalink to &quot;📋 Examples:&quot;">​</a></h4><ul><li><code>fix(router): resolve issue with locale switching</code></li><li><code>feat(seo): add automatic og:locale meta tag generation</code></li><li><code>docs(contribution): update contribution guide with commit message format</code></li></ul><h4 id="🛠️-commit-types" tabindex="-1">🛠️ Commit Types: <a class="header-anchor" href="#🛠️-commit-types" aria-label="Permalink to &quot;🛠️ Commit Types:&quot;">​</a></h4><ul><li><strong>feat</strong>: A new feature.</li><li><strong>fix</strong>: A bug fix.</li><li><strong>docs</strong>: Documentation changes or updates.</li><li><strong>style</strong>: Code style or formatting changes (no functional impact).</li><li><strong>refactor</strong>: Code changes that neither fix a bug nor add a feature.</li><li><strong>test</strong>: Adding or updating tests.</li><li><strong>chore</strong>: Miscellaneous tasks, such as updating build scripts or dependencies.</li></ul><p>For more details, refer to the <a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits Specification</a>.</p><h3 id="_5-🚀-push-to-github" tabindex="-1">5. 🚀 Push to GitHub <a class="header-anchor" href="#_5-🚀-push-to-github" aria-label="Permalink to &quot;5. 🚀 Push to GitHub&quot;">​</a></h3><p>Push your changes to your fork on GitHub:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-feature-name</span></span></code></pre></div><h3 id="_6-🔄-create-a-pull-request" tabindex="-1">6. 🔄 Create a Pull Request <a class="header-anchor" href="#_6-🔄-create-a-pull-request" aria-label="Permalink to &quot;6. 🔄 Create a Pull Request&quot;">​</a></h3><ul><li>Go to your forked repository on GitHub.</li><li>Click the &quot;Compare &amp; pull request&quot; button.</li><li>Ensure your PR targets the <code>main</code> branch of the original repository (<code>s00d/nuxt-i18n-micro</code>).</li><li>Describe your changes in the PR, and link to any relevant issues.</li></ul><h3 id="_7-🕵️‍♂️-await-feedback" tabindex="-1">7. 🕵️‍♂️ Await Feedback <a class="header-anchor" href="#_7-🕵️‍♂️-await-feedback" aria-label="Permalink to &quot;7. 🕵️‍♂️ Await Feedback&quot;">​</a></h3><p>Once your pull request is submitted, a maintainer will review your changes. Be prepared to make adjustments based on feedback. Once approved, your PR will be merged into the main branch.</p><h2 id="💡-contribution-tips" tabindex="-1">💡 Contribution Tips <a class="header-anchor" href="#💡-contribution-tips" aria-label="Permalink to &quot;💡 Contribution Tips&quot;">​</a></h2><ul><li><strong>📝 Documentation</strong>: If you add or change a feature, ensure that you update the relevant documentation.</li><li><strong>🧼 Code Cleanliness</strong>: Keep your code clean and follow the project&#39;s coding standards.</li><li><strong>💬 Respectful Communication</strong>: Be respectful and friendly in your communications. We are all working towards the common goal of making <code>Nuxt I18n Micro</code> better.</li></ul>`,89)])])}const g=i(n,[["render",o]]);export{u as __pageData,g as default};
