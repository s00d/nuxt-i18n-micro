import { fileURLToPath } from 'node:url'
import { expect, test } from '@nuxt/test-utils/playwright'

test.use({
  nuxt: {
    rootDir: fileURLToPath(new URL('./fixtures/async-components', import.meta.url)),
  },
  // launchOptions: {
  //   headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä
  //   slowMo: 500, // –ó–∞–º–µ–¥–ª–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö) –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
  // },
})

test.describe('async-components', () => {
  test('renders async components test page', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await expect(page.locator('.async-components-test h1')).toHaveText('Async Components Test')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    await expect(page.locator('.async-components-test p').first()).toContainText('Testing async components with i18n translations')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ–∫—Ü–∏–π
    await expect(page.locator('#test1')).toBeVisible()
    await expect(page.locator('#test2')).toBeVisible()
    await expect(page.locator('#test3')).toBeVisible()
    await expect(page.locator('#test4')).toBeVisible()
    await expect(page.locator('#test5')).toBeVisible()
  })

  test('async components load correctly', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    await page.waitForTimeout(1000)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
    await expect(page.locator('#simple-async-component')).toBeVisible()
    await expect(page.locator('#simple-async-component h3')).toHaveText('Simple Async Component')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É —Å—á–µ—Ç—á–∏–∫–∞
    await expect(page.locator('#simple-counter-btn')).toBeVisible()

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await page.click('#simple-counter-btn')
    await expect(page.locator('#simple-counter-btn')).toContainText('(1)')
  })

  test('locale switching works on async components page', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å
    await expect(page.locator('#current-locale')).toHaveText('en')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    await page.click('#locale-ru')
    await expect(page).toHaveURL('/ru/async-components-test')
    await expect(page.locator('#current-locale')).toHaveText('ru')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è
    await expect(page.locator('.async-components-test h1')).toHaveText('–¢–µ—Å—Ç –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–∏–π
    await page.click('#locale-de')
    await expect(page).toHaveURL('/de/async-components-test')
    await expect(page.locator('#current-locale')).toHaveText('de')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è
    await expect(page.locator('.async-components-test h1')).toHaveText('Async-Komponenten Test')
  })

  test('navigation between test pages works', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ –≤—Ç–æ—Ä—É—é —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.click('text=Go to Test 2')
    await expect(page).toHaveURL('/async-components-test-2')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ
    await page.click('text=Back to Test 1')
    await expect(page).toHaveURL('/async-components-test')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    await page.click('text=Back to Home')
    await expect(page).toHaveURL('/')
  })

  test('dynamic component loading works', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤–∏–¥–Ω–∞
    await expect(page.locator('#load-dynamic-btn')).toBeVisible()

    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
    await page.click('#load-dynamic-btn')

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    await page.waitForTimeout(500)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ—è–≤–∏–ª—Å—è
    await expect(page.locator('#dynamic-component-container')).toBeVisible()
  })

  test('test results section displays correct information', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    await expect(page.locator('#test-results')).toBeVisible()
    await expect(page.locator('#test-results h2')).toHaveText('Test Results')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª–∏
    await expect(page.locator('#current-locale')).toHaveText('en')
    await expect(page.locator('#route-name')).toHaveText('async-components-test')
    await expect(page.locator('#translations-loaded')).toHaveText('Yes')
  })

  test('language switcher works correctly', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
    await expect(page.locator('#language-switcher')).toBeVisible()
    await expect(page.locator('#language-switcher h3')).toHaveText('Switch Language')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ —è–∑—ã–∫–æ–≤
    await expect(page.locator('#locale-en')).toBeVisible()
    await expect(page.locator('#locale-ru')).toBeVisible()
    await expect(page.locator('#locale-de')).toBeVisible()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    await expect(page.locator('#locale-en')).toHaveClass(/active/)
  })

  test('async components work with different locales', async ({ page, goto }) => {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    await goto('/ru/async-components-test', { waitUntil: 'hydration' })
    await page.waitForTimeout(1000)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è —Å —Ä—É—Å—Å–∫–∏–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
    await expect(page.locator('#simple-async-component h3')).toHaveText('–ü—Ä–æ—Å—Ç–æ–π –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç')

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ
    await goto('/de/async-components-test', { waitUntil: 'hydration' })
    await page.waitForTimeout(1000)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è —Å –Ω–µ–º–µ—Ü–∫–∏–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
    await expect(page.locator('#simple-async-component h3')).toHaveText('Einfache Async-Komponente')
  })

  test('main page navigation works', async ({ page, goto }) => {
    await goto('/', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await expect(page.locator('h1')).toHaveText('Async Components Test Suite')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ –ø–µ—Ä–≤–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await page.click('text=üß™ Async Components Test 1')
    await expect(page).toHaveURL('/async-components-test')

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    await goto('/', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫–æ –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await page.click('text=üß™ Async Components Test 2')
    await expect(page).toHaveURL('/async-components-test-2')
  })

  test('locale switching on main page works', async ({ page, goto }) => {
    await goto('/', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å
    await expect(page.locator('text=Current Locale:')).toBeVisible()

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    await page.click('button:has-text("–†—É—Å—Å–∫–∏–π")')
    await expect(page).toHaveURL('/ru')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è
    await expect(page.locator('h1')).toHaveText('–ù–∞–±–æ—Ä –¢–µ—Å—Ç–æ–≤ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–∏–π
    await page.click('button:has-text("Deutsch")')
    await expect(page).toHaveURL('/de')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è
    await expect(page.locator('h1')).toHaveText('Async-Komponenten Test-Suite')
  })

  test('async components load correctly with translations', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
    await expect(page.locator('.simple-async-component')).toBeVisible()
    await expect(page.locator('.async-component-with-translations')).toBeVisible()
    await expect(page.locator('.async-component-with-i18n-route')).toBeVisible()
    await expect(page.locator('.async-component-with-error')).toBeVisible()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    await expect(page.locator('.simple-async-component h3')).toHaveText('Simple Async Component')
    await expect(page.locator('.async-component-with-translations h3')).toHaveText('Async Component with Translations Loaded')
    await expect(page.locator('.async-component-with-i18n-route h3')).toHaveText('Async Component with defineI18nRoute Loaded')
    await expect(page.locator('.async-component-with-error h3')).toHaveText('Error loading component')
  })

  test('dynamic async component loading works', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
    await expect(page.locator('#dynamic-component-container')).not.toBeVisible()

    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
    await page.click('#load-dynamic-btn')

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ—è–≤–∏–ª—Å—è
    await expect(page.locator('#dynamic-component-container')).toBeVisible()
    await expect(page.locator('.async-dynamic-component')).toBeVisible()
    await expect(page.locator('.async-dynamic-component h3')).toHaveText('Dynamic Async Component Loaded')
  })

  test('async components work with locale switching', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
    await expect(page.locator('.simple-async-component h3')).toHaveText('Simple Async Component')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    await page.click('#locale-ru')
    await expect(page).toHaveURL('/ru/async-components-test')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    await expect(page.locator('.simple-async-component h3')).toHaveText('–ü—Ä–æ—Å—Ç–æ–π –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç')
    await expect(page.locator('.async-component-with-translations h3')).toHaveText('–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ü–µ—Ä–µ–≤–æ–¥–∞–º–∏ –ó–∞–≥—Ä—É–∂–µ–Ω')
    await expect(page.locator('.async-component-with-i18n-route h3')).toHaveText('–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å defineI18nRoute –ó–∞–≥—Ä—É–∂–µ–Ω')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–∏–π
    await page.click('#locale-de')
    await expect(page).toHaveURL('/de/async-components-test')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–º–µ—Ü–∫–∏–π —Ç–µ–∫—Å—Ç
    await expect(page.locator('.simple-async-component h3')).toHaveText('Einfache Async-Komponente')
    await expect(page.locator('.async-component-with-translations h3')).toHaveText('Async-Komponente mit √úbersetzungen Geladen')
  })

  test('second test page renders correctly', async ({ page, goto }) => {
    await goto('/async-components-test-2', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    await expect(page.locator('.async-components-test-2 h1')).toHaveText('Async Components Test 2')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ–∫—Ü–∏–π
    await expect(page.locator('#test6')).toBeVisible()
    await expect(page.locator('#test7')).toBeVisible()
    await expect(page.locator('#test8')).toBeVisible()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
    await expect(page.locator('.delayed-async-component')).toBeVisible()
    await expect(page.locator('.delayed-async-component h3')).toHaveText('Delayed Async Component Loaded')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    await expect(page.locator('.multiple-async-component-1')).toBeVisible()
    await expect(page.locator('.multiple-async-component-2')).toBeVisible()
    await expect(page.locator('.multiple-async-component-3')).toBeVisible()
  })

  test('conditional async component toggles correctly', async ({ page, goto }) => {
    await goto('/async-components-test-2', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—Å–ª–æ–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∫—Ä—ã—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
    await expect(page.locator('#conditional-component-container')).not.toBeVisible()

    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑–∞
    await page.click('#toggle-conditional-btn')
    await expect(page.locator('#toggle-conditional-btn')).toHaveText('Hide Component')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ—è–≤–∏–ª—Å—è
    await expect(page.locator('#conditional-component-container')).toBeVisible()
    await expect(page.locator('.conditional-async-component')).toBeVisible()
    await expect(page.locator('.conditional-async-component h3')).toHaveText('Conditional Async Component Loaded')

    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    await page.click('#toggle-conditional-btn')
    await expect(page.locator('#toggle-conditional-btn')).toHaveText('Show Component')
    await expect(page.locator('#conditional-component-container')).not.toBeVisible()
  })

  test('multiple async components interactions work', async ({ page, goto }) => {
    await goto('/async-components-test-2', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
    await expect(page.locator('.multiple-async-component-1')).toBeVisible()
    await expect(page.locator('.multiple-async-component-2')).toBeVisible()
    await expect(page.locator('.multiple-async-component-3')).toBeVisible()

    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    await page.click('.multiple-async-component-1 .action-button')
    await expect(page.locator('.multiple-async-component-1 .action-result')).toHaveText('Action completed successfully in Component 1')

    await page.click('.multiple-async-component-2 .action-button')
    await expect(page.locator('.multiple-async-component-2 .action-result')).toHaveText('Action completed successfully in Component 2')

    await page.click('.multiple-async-component-3 .action-button')
    await expect(page.locator('.multiple-async-component-3 .action-result')).toHaveText('Action completed successfully in Component 3')
  })

  test('delayed async component shows loading state', async ({ page, goto }) => {
    await goto('/async-components-test-2', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    await expect(page.locator('.delayed-async-component')).toBeVisible()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞
    await expect(page.locator('.delayed-async-component .loading-indicator')).toBeVisible()
    await expect(page.locator('.delayed-async-component .loading-indicator')).toHaveText('Loading...')

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (1 —Å–µ–∫—É–Ω–¥–∞)
    await expect(page.locator('.delayed-async-component .loaded-content')).toBeVisible({ timeout: 2000 })
    await expect(page.locator('.delayed-async-component .loaded-content')).toHaveText('Component loaded successfully!')
  })

  test('navigation between test pages preserves state', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    await page.click('#load-dynamic-btn')
    await expect(page.locator('#dynamic-component-container')).toBeVisible()

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.click('text=Go to Test 2')
    await expect(page).toHaveURL('/async-components-test-2')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
    await expect(page.locator('.async-components-test-2 h1')).toHaveText('Async Components Test 2')

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.click('text=Back to Test 1')
    await expect(page).toHaveURL('/async-components-test')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∫—Ä—ã—Ç)
    await expect(page.locator('#dynamic-component-container')).not.toBeVisible()
  })

  test('async components work with different locales on second page', async ({ page, goto }) => {
    await goto('/async-components-test-2', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
    await expect(page.locator('.delayed-async-component h3')).toHaveText('Delayed Async Component Loaded')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    await page.click('#locale-ru')
    await expect(page).toHaveURL('/ru/async-components-test-2')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç
    await expect(page.locator('.delayed-async-component h3')).toHaveText('–û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ó–∞–≥—Ä—É–∂–µ–Ω')
    await expect(page.locator('.multiple-async-component-1 h3')).toHaveText('–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç 1 –ó–∞–≥—Ä—É–∂–µ–Ω')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–∏–π
    await page.click('#locale-de')
    await expect(page).toHaveURL('/de/async-components-test-2')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–º–µ—Ü–∫–∏–π —Ç–µ–∫—Å—Ç
    await expect(page.locator('.delayed-async-component h3')).toHaveText('Verz√∂gerte Async-Komponente Geladen')
    await expect(page.locator('.multiple-async-component-1 h3')).toHaveText('Mehrere Async-Komponente 1 Geladen')
  })

  test('async components handle errors gracefully', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –æ—à–∏–±–∫–æ–π –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    await expect(page.locator('.async-component-with-error')).toBeVisible()
    await expect(page.locator('.async-component-with-error h3')).toHaveText('Error loading component')
  })

  test('test results display correct information', async ({ page, goto }) => {
    await goto('/async-components-test', { waitUntil: 'hydration' })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    await expect(page.locator('#test-results')).toBeVisible()
    await expect(page.locator('#current-locale')).toHaveText('en')
    await expect(page.locator('#route-name')).toHaveText('async-components-test')
    await expect(page.locator('#translations-loaded')).toHaveText('Yes')
  })

  test('language switcher works on both pages', async ({ page, goto }) => {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await goto('/async-components-test', { waitUntil: 'hydration' })
    await page.click('#locale-ru')
    await expect(page).toHaveURL('/ru/async-components-test')
    await expect(page.locator('#current-locale')).toHaveText('ru')

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.click('text=–ü–µ—Ä–µ–π—Ç–∏ –∫ –¢–µ—Å—Ç—É 2')
    await expect(page).toHaveURL('/ru/async-components-test-2')
    await expect(page.locator('#current-locale')).toHaveText('ru')

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–∏–π –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await page.click('#locale-de')
    await expect(page).toHaveURL('/de/async-components-test-2')
    await expect(page.locator('#current-locale')).toHaveText('de')
  })
})
